basePath: /api
definitions:
  config.Config:
    properties:
      email:
        $ref: '#/definitions/config.Email'
      jwt:
        $ref: '#/definitions/config.JWT'
      logger:
        $ref: '#/definitions/config.Logger'
      mysql:
        $ref: '#/definitions/config.Mysql'
      qiNiu:
        $ref: '#/definitions/config.QiNiu'
      qq:
        $ref: '#/definitions/config.QQ'
      siteInfo:
        $ref: '#/definitions/config.SiteInfo'
      system:
        $ref: '#/definitions/config.System'
      upload:
        $ref: '#/definitions/config.Upload'
    type: object
  config.Email:
    properties:
      default-from-email:
        type: string
      host:
        type: string
      passwrod:
        type: string
      port:
        type: integer
      user:
        type: string
      user-ssl:
        type: boolean
      user-tls:
        type: boolean
    type: object
  config.JWT:
    properties:
      expire:
        type: integer
      issure:
        type: string
      secret:
        type: string
    type: object
  config.Logger:
    properties:
      director:
        type: string
      level:
        type: string
      logInConsol:
        type: boolean
      perfix:
        type: string
      showLine:
        description: 是否显示行号
        type: boolean
    type: object
  config.Mysql:
    properties:
      config:
        description: 高级配置
        type: string
      db-name:
        description: 数据库名
        type: string
      engine:
        default: InnoDB
        description: 数据库引擎，默认InnoDB
        type: string
      log-mode:
        description: 是否开启Gorm全局日志
        type: string
      log-zap:
        description: 是否通过zap写入日志文件
        type: boolean
      max-idle-conns:
        description: 空闲中的最大连接数
        type: integer
      max-open-conns:
        description: 打开到数据库的最大连接数
        type: integer
      password:
        description: 数据库密码
        type: string
      path:
        description: 数据库地址
        type: string
      port:
        description: 数据库端口
        type: string
      prefix:
        description: 数据库前缀
        type: string
      singular:
        description: 是否开启全局禁用复数，true表示开启
        type: boolean
      username:
        description: 数据库账号
        type: string
    type: object
  config.QQ:
    properties:
      app_id:
        type: string
      key:
        type: string
      redirect:
        type: string
    type: object
  config.QiNiu:
    properties:
      access_key:
        type: string
      bucket:
        type: string
      cdn:
        type: string
      enabeld:
        type: boolean
      secret_key:
        type: string
      size:
        type: number
      zone:
        type: string
    type: object
  config.SiteInfo:
    properties:
      email:
        type: string
      title:
        type: string
      version:
        type: string
    type: object
  config.System:
    properties:
      env:
        type: string
      host:
        type: string
      port:
        type: integer
    type: object
  config.Upload:
    properties:
      path:
        type: string
      size:
        type: integer
    type: object
  image_api.ImageUpdateRequest:
    properties:
      id:
        type: integer
      name:
        type: string
    required:
    - id
    - name
    type: object
  models.RemoveList:
    properties:
      id_list:
        items:
          type: integer
        type: array
    type: object
info:
  contact: {}
  title: 博客后端
  version: "1.0"
paths:
  /images:
    delete:
      consumes:
      - application/json
      description: 删除图片
      parameters:
      - description: 要删除的图片id列表
        in: body
        name: some_id
        schema:
          $ref: '#/definitions/models.RemoveList'
      produces:
      - application/json
      responses: {}
      summary: 删除图片
      tags:
      - Image
    get:
      description: 获取图片列表
      parameters:
      - description: 页码
        in: query
        name: page
        type: integer
      - description: 每页显示所少
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses: {}
      summary: 查询图片
      tags:
      - Image
    post:
      consumes:
      - application/json
      description: 上传图片到数据库
      parameters:
      - description: 图片文件
        in: formData
        name: images
        type: file
      produces:
      - application/json
      responses: {}
      summary: 上传图片
      tags:
      - Image
    put:
      consumes:
      - application/json
      description: 更改图片名字
      parameters:
      - description: 要修改的图片id
        in: body
        name: id
        schema:
          $ref: '#/definitions/image_api.ImageUpdateRequest'
      produces:
      - application/json
      responses: {}
      summary: 更新图片
      tags:
      - Image
  /settings/{name}:
    get:
      description: 根据传入的种类，返回对应的设置信息
      parameters:
      - description: 设置种类
        in: path
        name: name
        type: string
      produces:
      - application/json
      responses: {}
      summary: 查看设置信息
      tags:
      - 设置信息
    put:
      consumes:
      - application/json
      description: 根据传入的种类，和数据，修改对应设置的信息
      parameters:
      - description: 设置种类
        in: body
        name: data
        schema:
          $ref: '#/definitions/config.Config'
      - description: 设置种类
        in: path
        name: name
        type: string
      produces:
      - application/json
      responses: {}
      summary: 跟新设置
      tags:
      - 设置信息
swagger: "2.0"
